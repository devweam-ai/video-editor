{"ast":null,"code":"import _objectSpread from\"/Users/kshitijvarma/Desktop/ai-doc-editor/AI-VideoGen/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import axios from'axios';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const VideoContext=/*#__PURE__*/createContext();const initialState={videos:[],currentVideo:null,loading:false,error:null,pagination:{page:1,limit:10,total:0,pages:0}};const videoReducer=(state,action)=>{var _state$currentVideo;switch(action.type){case'SET_LOADING':return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case'SET_ERROR':return _objectSpread(_objectSpread({},state),{},{error:action.payload,loading:false});case'SET_VIDEOS':return _objectSpread(_objectSpread({},state),{},{videos:action.payload.videos,pagination:action.payload.pagination,loading:false});case'ADD_VIDEO':return _objectSpread(_objectSpread({},state),{},{videos:[action.payload,...state.videos],currentVideo:action.payload,loading:false});case'UPDATE_VIDEO':return _objectSpread(_objectSpread({},state),{},{videos:state.videos.map(video=>video.videoId===action.payload.videoId?action.payload:video),currentVideo:((_state$currentVideo=state.currentVideo)===null||_state$currentVideo===void 0?void 0:_state$currentVideo.videoId)===action.payload.videoId?action.payload:state.currentVideo});case'SET_CURRENT_VIDEO':return _objectSpread(_objectSpread({},state),{},{currentVideo:action.payload});case'CLEAR_ERROR':return _objectSpread(_objectSpread({},state),{},{error:null});default:return state;}};export const VideoProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(videoReducer,initialState);const mapStatusToUi=status=>{if(!status)return'generating';const s=String(status).toUpperCase();if(s==='SUCCEEDED'||s==='COMPLETED'||s==='COMPLETED_SUCCESS')return'completed';if(s==='FAILED'||s==='CANCELLED'||s==='CANCELED')return'failed';return'generating';};const api=axios.create({baseURL:'/api/videos',headers:{'Content-Type':'application/json'},withCredentials:true});// Redirect unauthenticated users to Weam login\napi.interceptors.response.use(response=>response,error=>{var _error$response;const status=error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status;if(status===401){window.location.href='https://app.weam.ai/login';return;// stop further handling\n}return Promise.reject(error);});const generateVideo=async function(prompt){let duration=arguments.length>1&&arguments[1]!==undefined?arguments[1]:5;let aspectRatio=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'16:9';let model=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'gen4_turbo';try{dispatch({type:'SET_LOADING',payload:true});dispatch({type:'CLEAR_ERROR'});const response=await api.post('/generate',{prompt,duration,aspectRatio,model});const newVideoRaw=response.data.video;const newVideo=_objectSpread(_objectSpread({},newVideoRaw),{},{status:mapStatusToUi(newVideoRaw.status)});dispatch({type:'ADD_VIDEO',payload:newVideo});// Show success toast\ntoast.success('Video generation started! This may take a few minutes.',{duration:5000});// Start polling for status updates\npollVideoStatus(newVideo.videoId);return newVideo;}catch(error){var _error$response2,_error$response2$data;const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||error.message;dispatch({type:'SET_ERROR',payload:errorMessage});// Show error toast\ntoast.error(\"Failed to generate video: \".concat(errorMessage));throw error;}};const pollVideoStatus=async function(videoId){let maxAttempts=arguments.length>1&&arguments[1]!==undefined?arguments[1]:60;let attempts=0;const pollInterval=3000;// 3 seconds\nconst poll=async()=>{try{const response=await api.get(\"/\".concat(videoId,\"/status\"));const videoStatus=_objectSpread(_objectSpread({},response.data),{},{status:mapStatusToUi(response.data.status)});dispatch({type:'UPDATE_VIDEO',payload:videoStatus});if(videoStatus.status==='completed'){toast.success('ðŸŽ‰ Your video is ready!',{duration:6000});return;}if(videoStatus.status==='failed'){toast.error(\"Video generation failed: \".concat(videoStatus.errorMessage||'Unknown error'),{duration:8000});return;}attempts++;if(attempts<maxAttempts){setTimeout(poll,pollInterval);}else{toast.error('Video generation timed out. Please try again.',{duration:8000});}}catch(error){console.error('Error polling video status:',error);attempts++;if(attempts<maxAttempts){setTimeout(poll,pollInterval);}else{toast.error('Lost connection to video generation. Please refresh the page.',{duration:8000});}}};poll();};const fetchVideos=async function(){let page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;let status=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;let search=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;try{dispatch({type:'SET_LOADING',payload:true});dispatch({type:'CLEAR_ERROR'});const params=new URLSearchParams({page:page.toString(),limit:limit.toString()});if(status)params.append('status',status);if(search)params.append('search',search);const response=await api.get(\"/?\".concat(params.toString()));const videos=(response.data.videos||[]).map(v=>_objectSpread(_objectSpread({},v),{},{status:mapStatusToUi(v.status)}));dispatch({type:'SET_VIDEOS',payload:{videos,pagination:response.data.pagination}});}catch(error){var _error$response3,_error$response3$data;const errorMessage=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message;dispatch({type:'SET_ERROR',payload:errorMessage});toast.error(\"Failed to load videos: \".concat(errorMessage));}};const updateVideoTitle=async(videoId,title)=>{try{const response=await api.patch(\"/\".concat(videoId,\"/title\"),{title});dispatch({type:'UPDATE_VIDEO',payload:response.data.video});toast.success('Title updated successfully!');}catch(error){var _error$response4,_error$response4$data;const errorMessage=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||error.message;toast.error(\"Failed to update title: \".concat(errorMessage));throw error;}};const regenerateVideo=async videoId=>{try{dispatch({type:'SET_LOADING',payload:true});dispatch({type:'CLEAR_ERROR'});const response=await api.post(\"/\".concat(videoId,\"/regenerate\"));const newVideo=response.data.video;dispatch({type:'ADD_VIDEO',payload:newVideo});toast.success('Regenerating video...',{duration:3000});pollVideoStatus(newVideo.videoId);return newVideo;}catch(error){var _error$response5,_error$response5$data;const errorMessage=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||error.message;dispatch({type:'SET_ERROR',payload:errorMessage});toast.error(\"Failed to regenerate video: \".concat(errorMessage));throw error;}};const deleteVideo=async videoId=>{try{await api.delete(\"/\".concat(videoId));dispatch({type:'SET_VIDEOS',payload:{videos:state.videos.filter(video=>video.videoId!==videoId),pagination:state.pagination}});toast.success('Video deleted successfully!');}catch(error){var _error$response6,_error$response6$data;const errorMessage=((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||error.message;toast.error(\"Failed to delete video: \".concat(errorMessage));throw error;}};const clearError=()=>{dispatch({type:'CLEAR_ERROR'});};useEffect(()=>{fetchVideos();},[]);const value=_objectSpread(_objectSpread({},state),{},{generateVideo,fetchVideos,updateVideoTitle,regenerateVideo,deleteVideo,clearError});return/*#__PURE__*/_jsx(VideoContext.Provider,{value:value,children:children});};export const useVideo=()=>{const context=useContext(VideoContext);if(!context){throw new Error('useVideo must be used within a VideoProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsx","_jsx","VideoContext","initialState","videos","currentVideo","loading","error","pagination","page","limit","total","pages","videoReducer","state","action","_state$currentVideo","type","_objectSpread","payload","map","video","videoId","VideoProvider","_ref","children","dispatch","mapStatusToUi","status","s","String","toUpperCase","api","create","baseURL","headers","withCredentials","interceptors","response","use","_error$response","window","location","href","Promise","reject","generateVideo","prompt","duration","arguments","length","undefined","aspectRatio","model","post","newVideoRaw","data","newVideo","success","pollVideoStatus","_error$response2","_error$response2$data","errorMessage","message","concat","maxAttempts","attempts","pollInterval","poll","get","videoStatus","setTimeout","console","fetchVideos","search","params","URLSearchParams","toString","append","v","_error$response3","_error$response3$data","updateVideoTitle","title","patch","_error$response4","_error$response4$data","regenerateVideo","_error$response5","_error$response5$data","deleteVideo","delete","filter","_error$response6","_error$response6$data","clearError","value","Provider","useVideo","context","Error"],"sources":["/Users/kshitijvarma/Desktop/ai-doc-editor/AI-VideoGen/client/src/context/VideoContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst VideoContext = createContext();\n\nconst initialState = {\n  videos: [],\n  currentVideo: null,\n  loading: false,\n  error: null,\n  pagination: {\n    page: 1,\n    limit: 10,\n    total: 0,\n    pages: 0\n  }\n};\n\nconst videoReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload, loading: false };\n    case 'SET_VIDEOS':\n      return { \n        ...state, \n        videos: action.payload.videos, \n        pagination: action.payload.pagination,\n        loading: false \n      };\n    case 'ADD_VIDEO':\n      return { \n        ...state, \n        videos: [action.payload, ...state.videos],\n        currentVideo: action.payload,\n        loading: false \n      };\n    case 'UPDATE_VIDEO':\n      return {\n        ...state,\n        videos: state.videos.map(video => \n          video.videoId === action.payload.videoId ? action.payload : video\n        ),\n        currentVideo: state.currentVideo?.videoId === action.payload.videoId \n          ? action.payload \n          : state.currentVideo\n      };\n    case 'SET_CURRENT_VIDEO':\n      return { ...state, currentVideo: action.payload };\n    case 'CLEAR_ERROR':\n      return { ...state, error: null };\n    default:\n      return state;\n  }\n};\n\nexport const VideoProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(videoReducer, initialState);\n\n  const mapStatusToUi = (status) => {\n    if (!status) return 'generating';\n    const s = String(status).toUpperCase();\n    if (s === 'SUCCEEDED' || s === 'COMPLETED' || s === 'COMPLETED_SUCCESS') return 'completed';\n    if (s === 'FAILED' || s === 'CANCELLED' || s === 'CANCELED') return 'failed';\n    return 'generating';\n  };\n\n  const api = axios.create({\n    baseURL: '/api/videos',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    withCredentials: true\n  });\n\n  // Redirect unauthenticated users to Weam login\n  api.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      const status = error?.response?.status;\n      if (status === 401) {\n        window.location.href = 'https://app.weam.ai/login';\n        return; // stop further handling\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  const generateVideo = async (prompt, duration = 5, aspectRatio = '16:9', model = 'gen4_turbo') => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'CLEAR_ERROR' });\n\n      const response = await api.post('/generate', {\n        prompt,\n        duration,\n        aspectRatio,\n        model\n      });\n\n      const newVideoRaw = response.data.video;\n      const newVideo = { ...newVideoRaw, status: mapStatusToUi(newVideoRaw.status) };\n      dispatch({ type: 'ADD_VIDEO', payload: newVideo });\n\n      // Show success toast\n      toast.success('Video generation started! This may take a few minutes.', {\n        duration: 5000,\n      });\n\n      // Start polling for status updates\n      pollVideoStatus(newVideo.videoId);\n\n      return newVideo;\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || error.message;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      \n      // Show error toast\n      toast.error(`Failed to generate video: ${errorMessage}`);\n      throw error;\n    }\n  };\n\n  const pollVideoStatus = async (videoId, maxAttempts = 60) => {\n    let attempts = 0;\n    const pollInterval = 3000; // 3 seconds\n\n    const poll = async () => {\n      try {\n        const response = await api.get(`/${videoId}/status`);\n        const videoStatus = { ...response.data, status: mapStatusToUi(response.data.status) };\n\n        dispatch({ type: 'UPDATE_VIDEO', payload: videoStatus });\n\n        if (videoStatus.status === 'completed') {\n          toast.success('ðŸŽ‰ Your video is ready!', {\n            duration: 6000,\n          });\n          return;\n        }\n\n        if (videoStatus.status === 'failed') {\n          toast.error(`Video generation failed: ${videoStatus.errorMessage || 'Unknown error'}`, {\n            duration: 8000,\n          });\n          return;\n        }\n\n        attempts++;\n        if (attempts < maxAttempts) {\n          setTimeout(poll, pollInterval);\n        } else {\n          toast.error('Video generation timed out. Please try again.', {\n            duration: 8000,\n          });\n        }\n      } catch (error) {\n        console.error('Error polling video status:', error);\n        attempts++;\n        if (attempts < maxAttempts) {\n          setTimeout(poll, pollInterval);\n        } else {\n          toast.error('Lost connection to video generation. Please refresh the page.', {\n            duration: 8000,\n          });\n        }\n      }\n    };\n\n    poll();\n  };\n\n  const fetchVideos = async (page = 1, limit = 10, status = null, search = null) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'CLEAR_ERROR' });\n\n      const params = new URLSearchParams({\n        page: page.toString(),\n        limit: limit.toString()\n      });\n\n      if (status) params.append('status', status);\n      if (search) params.append('search', search);\n\n      const response = await api.get(`/?${params.toString()}`);\n      const videos = (response.data.videos || []).map(v => ({ ...v, status: mapStatusToUi(v.status) }));\n      dispatch({ type: 'SET_VIDEOS', payload: { videos, pagination: response.data.pagination } });\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || error.message;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      toast.error(`Failed to load videos: ${errorMessage}`);\n    }\n  };\n\n  const updateVideoTitle = async (videoId, title) => {\n    try {\n      const response = await api.patch(`/${videoId}/title`, { title });\n      dispatch({ type: 'UPDATE_VIDEO', payload: response.data.video });\n      toast.success('Title updated successfully!');\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || error.message;\n      toast.error(`Failed to update title: ${errorMessage}`);\n      throw error;\n    }\n  };\n\n  const regenerateVideo = async (videoId) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'CLEAR_ERROR' });\n\n      const response = await api.post(`/${videoId}/regenerate`);\n      const newVideo = response.data.video;\n      \n      dispatch({ type: 'ADD_VIDEO', payload: newVideo });\n      \n      toast.success('Regenerating video...', {\n        duration: 3000,\n      });\n      \n      pollVideoStatus(newVideo.videoId);\n\n      return newVideo;\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || error.message;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      toast.error(`Failed to regenerate video: ${errorMessage}`);\n      throw error;\n    }\n  };\n\n  const deleteVideo = async (videoId) => {\n    try {\n      await api.delete(`/${videoId}`);\n      dispatch({ \n        type: 'SET_VIDEOS', \n        payload: {\n          videos: state.videos.filter(video => video.videoId !== videoId),\n          pagination: state.pagination\n        }\n      });\n      toast.success('Video deleted successfully!');\n    } catch (error) {\n      const errorMessage = error.response?.data?.error || error.message;\n      toast.error(`Failed to delete video: ${errorMessage}`);\n      throw error;\n    }\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const value = {\n    ...state,\n    generateVideo,\n    fetchVideos,\n    updateVideoTitle,\n    regenerateVideo,\n    deleteVideo,\n    clearError\n  };\n\n  return (\n    <VideoContext.Provider value={value}>\n      {children}\n    </VideoContext.Provider>\n  );\n};\n\nexport const useVideo = () => {\n  const context = useContext(VideoContext);\n  if (!context) {\n    throw new Error('useVideo must be used within a VideoProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}